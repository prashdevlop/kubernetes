Steps for Kubernetes Installation

Step 1: Disable SELinux & setup firewall rules

setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux

firewall-cmd --permanent --add-port=6443/tcp
firewall-cmd --permanent --add-port=2379-2380/tcp
firewall-cmd --permanent --add-port=10250/tcp
firewall-cmd --permanent --add-port=10251/tcp
firewall-cmd --permanent --add-port=10252/tcp
firewall-cmd --permanent --add-port=10255/tcp
firewall-cmd --reload
modprobe br_netfilter



Step 2: Configure Kubernetes Repository

[root@k8s-master ~]# cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

Step 3: Install Kubeadm and Docker
Once the package repositories are configured, run the beneath command to install kubeadm and docker packages.
[root@k8s-master ~]# yum install kubeadm docker -y

Start and enable kubectl and docker service

systemctl restart docker && systemctl enable docker
systemctl  restart kubelet && systemctl enable kubelet

Step 4: Initialize Kubernetes Master with ‘kubeadm init’
Run the beneath command to  initialize and setup kubernetes master.

[root@k8s-master ~]# kubeadm init

mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config

to join cluster from other node

 kubeadm join 10.0.2.15:6443 --token cb3h5b.9lknss5yjgtfifqs --discovery-token-ca-cert-hash sha256:c485d299b4a4b1694b03765979df3adbef0e86ccd800efb1f4b778acb0b461aa

on master run

kubeadm token create --print-join-command


kubeadm init --apiserver-advertise-address=192.168.11.21 --pod-network-cidr=192.168.0.0/16

for resetting

kubeadm reset 

echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

kubeadm join 192.168.10.21:6443 --token nb6pwj.ugp0hk3rw35moexz --discovery-token-ca-cert-hash sha256:b8d9b0bbaa7b889187a1e49ee24919db977be58782da1d1b9f479d54d7154cb7


kubectl apply -f https://docs.projectcalico.org/v3.0/getting-started/kubernetes/installation/hosted/kubeadm/1.7/calico.yaml

kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml

curl \
https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml \
-O

POD_CIDR="192.168.0.0/16" \
sed -i -e "s?192.168.0.0/16?$POD_CIDR?g" calico.yaml

kubectl apply -f calico.yaml


kubectl get services --all-namespaces

kubectl cluster-info

kubectl create deployment nginx --image=nginx

kubectl create service nodeport nginx --tcp=80:80


kubectl logs -n kube-system <pod name>

kubectl describe pods <pod name> -n <namespace>

taint in kubernetes to run pods on master

kubectl taint nodes --all node-role.kubernetes.io/master-

kubectl -n kube-system edit service kubernetes-dashboard
